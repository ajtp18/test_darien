# Generated by Django 5.2 on 2025-04-28 01:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_alter_cliente_email_alter_cliente_telefono'),
    ]

    operations = [
        migrations.AlterField(
            model_name='banco',
            name='direccion',
            field=models.CharField(blank=True, max_length=200, validators=[django.core.validators.RegexValidator(message='La dirección contiene caracteres inválidos', regex='^[a-zA-Z0-9\\s,.-]+$')]),
        ),
        migrations.AlterField(
            model_name='banco',
            name='nombre',
            field=models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='El nombre solo debe contener letras', regex='^[a-zA-Z\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='banco',
            name='tipo',
            field=models.CharField(choices=[('PRIVADO', 'Privado'), ('GOBIERNO', 'Gobierno')], default='PRIVADO', max_length=10),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='edad',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'La edad debe ser mayor a 0'), django.core.validators.MaxValueValidator(99, 'La edad debe ser menor a 100')]),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='email',
            field=models.EmailField(max_length=254, unique=True, validators=[django.core.validators.RegexValidator(message='Ingrese un email válido', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')]),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='nacionalidad',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='nombre_apellido',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='El nombre solo debe contener letras', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')]),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='telefono',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='tipo_persona',
            field=models.CharField(choices=[('NATURAL', 'Natural'), ('JURIDICO', 'Jurídico')], default='NATURAL', max_length=10),
        ),
        migrations.AlterField(
            model_name='credito',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditos', to='core.cliente'),
        ),
        migrations.AlterField(
            model_name='credito',
            name='fecha_registro',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='credito',
            name='pago_maximo',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01, 'El pago máximo debe ser mayor a 0')]),
        ),
        migrations.AlterField(
            model_name='credito',
            name='pago_minimo',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01, 'El pago mínimo debe ser mayor a 0')]),
        ),
        migrations.AlterField(
            model_name='credito',
            name='plazo_meses',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'El plazo debe ser de al menos 1 mes')]),
        ),
        migrations.AlterField(
            model_name='credito',
            name='tipo_credito',
            field=models.CharField(choices=[('AUTOMOTRIZ', 'Automotriz'), ('HIPOTECARIO', 'Hipotecario'), ('COMERCIAL', 'Comercial')], default='AUTOMOTRIZ', max_length=20),
        ),
    ]
